-- MySQL Script generated by MySQL Workbench
-- Tue Aug  7 15:04:42 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bd_siri_cotoco
-- -----------------------------------------------------
-- Banco de dados sendo utilizado no jogo Contos de Reinos Distantes, carinhosamente apelidado de bd_siri_cotoco em homenagem à taverna de mesmo nome presente no jogo.

-- -----------------------------------------------------
-- Schema bd_siri_cotoco
--
-- Banco de dados sendo utilizado no jogo Contos de Reinos Distantes, carinhosamente apelidado de bd_siri_cotoco em homenagem à taverna de mesmo nome presente no jogo.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bd_siri_cotoco` DEFAULT CHARACTER SET utf8 ;
USE `bd_siri_cotoco` ;

-- -----------------------------------------------------
-- Table `bd_siri_cotoco`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_siri_cotoco`.`usuarios` (
  `id` INT(5) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'id atribuida automaticamente aos novos usuários criados ',
  `usuario` VARCHAR(16) NOT NULL COMMENT 'Apelido escolhido pelo usuário. O usuário terá valor único, ou seja, nomes repitidos de usuário não são permitidos, e este será o nome que será exibido no ranking, caso se trate de um usuário jogador\n',
  `senha` VARCHAR(32) NOT NULL COMMENT 'campo onde a senha do usuário será armazenada em SHA3-224',
  `email` VARCHAR(100) NOT NULL COMMENT 'Campo onde o email do usuário será salvo. \nAO PROFESSOR: Devemos deixar o email como único?\n',
  `nome` VARCHAR(100) NOT NULL COMMENT 'Campo onde o nome completo real do usuário será armazenado.\n',
  `data_nascimento` DATE NOT NULL COMMENT 'Data de nascimento do usuário.\n',
  `data_criacao` DATETIME NOT NULL COMMENT 'Data da criação da conta. Atribuído automaticamente.',
  `permissao` TINYINT(1) UNSIGNED NOT NULL COMMENT 'Este campo define o nível de acesso dos usuários, dividido-os em administradores e jogadores, sendo:\n\n0 - jogador e\n\n1 - administrador.\n\nA permissão do usuário é definida automaticamente no momento da criação da conta.',
  UNIQUE INDEX `usuarioscol_UNIQUE` (`usuario` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB
COMMENT = 'Tabela que contem os usuários cadastrados, tanto administradores quanto jogadores. A diferenciação dos tipos de usuário se dá pelo campo permissao.';


-- -----------------------------------------------------
-- Table `bd_siri_cotoco`.`logs_de_acesso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_siri_cotoco`.`logs_de_acesso` (
  `id` INT(5) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'id do campo',
  `data_criacao` DATETIME NOT NULL COMMENT 'Data de geração do log, que indicará o momento em que determinado usuário logou.',
  `usuarios_id` INT(5) ZEROFILL UNSIGNED NOT NULL COMMENT 'chave estrangeira recebida de de usuarios',
  PRIMARY KEY (`id`),
  INDEX `fk_logs_de_acesso_usuarios_idx` (`usuarios_id` ASC),
  CONSTRAINT `fk_logs_de_acesso_usuarios`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `bd_siri_cotoco`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Tabela contendo os logs de acesso dos usuários. Serão armazenados os dados de30 dias, e partir daí os dados mais antigos serão gradativamente apagados e substituidos por dados mais recentes ';


-- -----------------------------------------------------
-- Table `bd_siri_cotoco`.`pontuacoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_siri_cotoco`.`pontuacoes` (
  `id` INT(4) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'id da pontuação',
  `pontuacao` INT(3) UNSIGNED NOT NULL COMMENT 'Pontuacao alcançada pelo jogador em determinada partida',
  `data_criacao` DATETIME NOT NULL COMMENT 'Data da criação da pontuação.',
  `usuarios_id` INT(5) ZEROFILL UNSIGNED NOT NULL COMMENT 'id do usuário ao qual a pontuação pertence\n',
  PRIMARY KEY (`id`),
  INDEX `fk_pontuacoes_usuarios1_idx` (`usuarios_id` ASC),
  CONSTRAINT `fk_pontuacoes_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `bd_siri_cotoco`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Tabela que conterá as 5 melhores pontuações do usuário, sendo que a maior delas será utilizada no ranking, onde será comparada às outras maiores pontuações dos demais usuários.';


-- -----------------------------------------------------
-- Table `bd_siri_cotoco`.`notificacoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_siri_cotoco`.`notificacoes` (
  `id` INT(3) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'id do campo',
  `notificacao` TEXT NOT NULL COMMENT 'corpo da notificação (mensagem)',
  `data_criacao` DATETIME NOT NULL COMMENT 'Data da criação da mensagem\n',
  `usuarios_id` INT(5) ZEROFILL UNSIGNED NOT NULL COMMENT 'id do administrador que criou a mensagem\n',
  PRIMARY KEY (`id`),
  INDEX `fk_notificacoes_usuarios1_idx` (`usuarios_id` ASC),
  CONSTRAINT `fk_notificacoes_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `bd_siri_cotoco`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Tabela que conterá as mensagens redigidas pelos administradores aos usuários (ex: aviso de manutenção, aviso de atualização, etc)';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
